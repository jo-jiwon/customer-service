"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./provider/modules/review.ts":
/*!************************************!*\
  !*** ./provider/modules/review.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_actions\": function() { return /* binding */ _actions; },\n/* harmony export */   \"addReview\": function() { return /* binding */ addReview; },\n/* harmony export */   \"removeReview\": function() { return /* binding */ removeReview; },\n/* harmony export */   \"modifyReview\": function() { return /* binding */ modifyReview; },\n/* harmony export */   \"initialCompleted\": function() { return /* binding */ initialCompleted; },\n/* harmony export */   \"initialReview\": function() { return /* binding */ initialReview; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\nvar initialState = {\n    data: [],\n    isFetched: false,\n    page: 0,\n    // pageSize: photoPageSize ? +photoPageSize : 8,\n    pageSize: 3,\n    totalPages: 0\n};\n// slice 생성\nvar reviewSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"review\",\n    initialState: initialState,\n    reducers: {\n        // // PayloadAction<payload타입>\n        // // Payload로 item객체를 받음\n        addReview: function(state, action) {\n            var review = action.payload;\n            state.data.unshift(review);\n            state.isAddCompleted = true; // 추가가 되었음으로 표시\n        },\n        // payload 없는 reducer\n        // completed 관련된 속성을 삭제함(undefined 상태)\n        initialCompleted: function(state) {\n            delete state.isAddCompleted;\n            delete state.isRemoveCompleted;\n            delete state.isModifyCompleted;\n        },\n        removeReview: function(state, action) {\n            var id = action.payload;\n            state.data.splice(state.data.findIndex(function(item) {\n                return item.id === id;\n            }), 1);\n            state.isRemoveCompleted = true; // 삭제 되었음을 표시\n        },\n        modifyReview: function(state, action) {\n            // 생성해서 넘긴 객체\n            var modifyItem = action.payload;\n            // state에 있는 객체\n            var reviewItem = state.data.find(function(item) {\n                return item.id === modifyItem.id;\n            });\n            // state에 있는 객체의 속성을 넘김 객체의 속성으로 변경\n            if (reviewItem) {\n                reviewItem.title = modifyItem.title;\n                reviewItem.description = modifyItem.description;\n                reviewItem.reviewPhotoUrl = modifyItem.reviewPhotoUrl;\n                reviewItem.fileName = modifyItem.fileName;\n                reviewItem.fileType = modifyItem.fileType;\n            }\n            state.isModifyCompleted = true; // 변경되었음을 표시\n        },\n        // initialPhotoItem: (state, action: PayloadAction<ReviewItem>) => {\n        //   const photo = action.payload;\n        //   // 백엔드에서 받아온 데이터\n        //   state.data = [{ ...photo }];\n        // },\n        // payload값으로 state를 초기화하는 reducer 필요함\n        initialReview: function(state, action) {\n            var reviews = action.payload;\n            //   // 백엔드에서 받아온 데이터\n            state.data = reviews;\n            //   // 데이터를 받아옴으로 값을 남김\n            state.isFetched = true;\n        },\n        addTotalpages: function(state) {\n            state.totalPages++;\n        }\n    }\n});\nvar _actions = reviewSlice.actions, addReview = _actions.addReview, removeReview = _actions.removeReview, modifyReview = _actions.modifyReview, initialCompleted = _actions.initialCompleted, initialReview = _actions.initialReview;\n/* harmony default export */ __webpack_exports__[\"default\"] = (reviewSlice.reducer);\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./provider/modules/review.ts\n");

/***/ })

});